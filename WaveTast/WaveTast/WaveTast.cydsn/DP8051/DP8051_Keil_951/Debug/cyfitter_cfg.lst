C51 COMPILER V9.51   CYFITTER_CFG                                                          05/12/2014 11:42:03 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe .\Gene
                    -rated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.lst) CD DB
                    - NOIP OT(2,SIZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * FILENAME: cyfitter_cfg.c
   3          * PSoC Creator 3.0 SP1
   4          *
   5          * Description:
   6          * This file is automatically generated by PSoC Creator with device 
   7          * initialization code.  Except for the user defined sections in
   8          * CyClockStartupError(), this file should not be modified.
   9          *
  10          ********************************************************************************
  11          * Copyright 2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include <string.h>
  18          #include <cytypes.h>
  19          #include <cydevice_trm.h>
  20          #include <cyfitter.h>
  21          #include <CyLib.h>
  22          #include <cyfitter_cfg.h>
  23          
  24          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  25          
  26          
  27          #if defined(__C51__) || defined(__CX51__)
  28                  #define CYPACKED
  29                  #define CYPACKED_ATTR
  30                  #define CYALIGNED
  31                  
  32              #define CY_CFG_UNUSED
  33                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  34          
  35          
  36          
  37                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  38                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  39                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  40          #else
                      #error Unsupported toolchain
              #endif
  43          
  44          
  45          
  46          /* Clock startup error codes                                                   */
  47          #define CYCLOCKSTART_NO_ERROR    0u
  48          #define CYCLOCKSTART_XTAL_ERROR  1u
  49          #define CYCLOCKSTART_32KHZ_ERROR 2u
  50          #define CYCLOCKSTART_PLL_ERROR   3u
  51          
  52          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  53          /*******************************************************************************
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/12/2014 11:42:03 PAGE 2   

  54          * Function Name: CyClockStartupError
  55          ********************************************************************************
  56          * Summary:
  57          *  If an error is encountered during clock configuration (crystal startup error,
  58          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  59          *  the customer, this function will stop in an infinite loop.
  60          *
  61          * Parameters:
  62          *   void
  63          *
  64          * Return:
  65          *   void
  66          *
  67          *******************************************************************************/
  68          CY_CFG_UNUSED
  69          static void CyClockStartupError(uint8 errorCode);
  70          CY_CFG_UNUSED
  71          static void CyClockStartupError(uint8 errorCode)
  72          {
  73   1          /* To remove the compiler warning if errorCode not used.                */
  74   1          errorCode = errorCode;
  75   1      
  76   1          /* `#START CyClockStartupError` */
  77   1      
  78   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  79   1          /* we will end up here to allow the customer to implement something to  */
  80   1          /* deal with the clock condition.                                       */
  81   1      
  82   1          /* `#END` */
  83   1      
  84   1          /* If nothing else, stop here since the clocks have not started         */
  85   1          /* correctly.                                                           */
  86   1          while(1) {}
  87   1      }
  88          #endif
  89          
  90          #define cfg_byte_table ((const void CYFAR *)0x080000u)
  91          /* UDB_0_5_1_CONFIG Address: CYDEV_UCFG_B0_P7_U1_BASE Size (bytes): 128 */
  92          #define BS_UDB_0_5_1_CONFIG_VAL ((const uint8 CYFAR *)0x00080540u)
  93          
  94          /* IOPINS0_2 Address: CYREG_PRT2_DR Size (bytes): 10 */
  95          #define BS_IOPINS0_2_VAL ((const uint8 CYFAR *)0x000805C0u)
  96          
  97          /* IOPINS0_4 Address: CYREG_PRT4_DM0 Size (bytes): 8 */
  98          #define BS_IOPINS0_4_VAL ((const uint8 CYFAR *)0x000805CCu)
  99          
 100          /* IOPINS0_6 Address: CYREG_PRT6_DM0 Size (bytes): 8 */
 101          #define BS_IOPINS0_6_VAL ((const uint8 CYFAR *)0x000805D4u)
 102          
 103          
 104          /*******************************************************************************
 105          * Function Name: ClockSetup
 106          ********************************************************************************
 107          *
 108          * Summary:
 109          *  Performs the initialization of all of the clocks in the device based on the
 110          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 111          *  clocks and setting the necessary dividers to produce the desired frequency. 
 112          *
 113          * Parameters:
 114          *  void
 115          *
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/12/2014 11:42:03 PAGE 3   

 116          * Return:
 117          *  void
 118          *
 119          *******************************************************************************/
 120          static void ClockSetup(void);
 121          static void ClockSetup(void)
 122          {
 123   1              uint32 timeout;
 124   1              uint8 pllLock;
 125   1      
 126   1      
 127   1              /* Configure Digital Clocks based on settings from Clock DWR */
 128   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x0017u);
 129   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x18u);
 130   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x0017u);
 131   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG1_CFG0 + 0x2u), 0x18u);
 132   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG2_CFG0), 0x0019u);
 133   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG2_CFG0 + 0x2u), 0x18u);
 134   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG3_CFG0), 0x001Du);
 135   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG3_CFG0 + 0x2u), 0x19u);
 136   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG4_CFG0), 0x752Fu);
 137   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG4_CFG0 + 0x2u), 0x19u);
 138   1      
 139   1              /* Configure ILO based on settings from Clock DWR */
 140   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02u);
 141   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08u);
 142   1      
 143   1              /* Configure IMO based on settings from Clock DWR */
 144   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03u);
 145   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_3MHZ)));
 146   1      
 147   1              /* Configure PLL based on settings from Clock DWR */
 148   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008u);
 149   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 150   1              /* Wait up to 250us for the PLL to lock */
 151   1              pllLock = 0u;
 152   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 153   1              { 
 154   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 155   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 156   2              }
 157   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 158   1              if (timeout == 0u)
 159   1              {
 160   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 161   2              }
 162   1      
 163   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 164   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 165   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 166   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 167   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 168   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 169   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 170   1      
 171   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x1Fu
             -)));
 172   1      }
 173          
 174          
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/12/2014 11:42:03 PAGE 4   

 175          /* Analog API Functions */
 176          
 177          
 178          /*******************************************************************************
 179          * Function Name: AnalogSetDefault
 180          ********************************************************************************
 181          *
 182          * Summary:
 183          *  Sets up the analog portions of the chip to default values based on chip
 184          *  configuration options from the project.
 185          *
 186          * Parameters:
 187          *  void
 188          *
 189          * Return:
 190          *  void
 191          *
 192          *******************************************************************************/
 193          static void AnalogSetDefault(void);
 194          static void AnalogSetDefault(void)
 195          {
 196   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 197   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 198   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 199   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT6_AMUX, 0x40u);
 200   1              CY_SET_REG8((void CYXDATA *)CYREG_DAC0_SW3, 0x01u);
 201   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 202   1      }
 203          
 204          
 205          /*******************************************************************************
 206          * Function Name: SetAnalogRoutingPumps
 207          ********************************************************************************
 208          *
 209          * Summary:
 210          * Enables or disables the analog pumps feeding analog routing switches.
 211          * Intended to be called at startup, based on the Vdda system configuration;
 212          * may be called during operation when the user informs us that the Vdda voltage
 213          * crossed the pump threshold.
 214          *
 215          * Parameters:
 216          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 217          *
 218          * Return:
 219          *  void
 220          *
 221          *******************************************************************************/
 222          void SetAnalogRoutingPumps(uint8 enabled)
 223          {
 224   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 225   1              if (enabled != 0u)
 226   1              {
 227   2                      regValue |= 0x00u;
 228   2              }
 229   1              else
 230   1              {
 231   2                      regValue &= (uint8)~0x00u;
 232   2              }
 233   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 234   1      }
 235          
 236          #define CY_AMUX_UNUSED CYREG_BOOST_SR
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/12/2014 11:42:03 PAGE 5   

 237          
 238          
 239          /*******************************************************************************
 240          * Function Name: cyfitter_cfg
 241          ********************************************************************************
 242          * Summary:
 243          *  This function is called by the start-up code for the selected device. It
 244          *  performs all of the necessary device configuration based on the design
 245          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 246          *  as Clocks and Pins as well as any component configuration that is necessary.
 247          *
 248          * Parameters:  
 249          *   void
 250          *
 251          * Return:
 252          *   void
 253          *
 254          *******************************************************************************/
 255          
 256          void cyfitter_cfg(void)
 257          {
 258   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 259   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 260   1      
 261   1              {
 262   2      
 263   2                      CYPACKED typedef struct {
 264   2                              void CYFAR *address;
 265   2                              uint16 size;
 266   2                      } CYPACKED_ATTR cfg_memset_t;
 267   2      
 268   2      
 269   2                      CYPACKED typedef struct {
 270   2                              void CYFAR *dest;
 271   2                              const void CYFAR *src;
 272   2                              uint16 size;
 273   2                      } CYPACKED_ATTR cfg_memcpy_t;
 274   2      
 275   2                      static const cfg_memset_t CYCODE cfg_memset_list [] = {
 276   2                              /* address, size */
 277   2                              {(void CYFAR *)(CYREG_PRT0_DR), 32u},
 278   2                              {(void CYFAR *)(CYREG_PRT3_DR), 16u},
 279   2                              {(void CYFAR *)(CYREG_PRT5_DR), 16u},
 280   2                              {(void CYFAR *)(CYREG_PRT12_DR), 16u},
 281   2                              {(void CYFAR *)(CYREG_PRT15_DR), 16u},
 282   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 3712u},
 283   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P7_ROUTE_BASE), 256u},
 284   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048u},
 285   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 286   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 287   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 288   2                      };
 289   2      
 290   2                      static const cfg_memcpy_t CYCODE cfg_memcpy_list [] = {
 291   2                              /* dest, src, size */
 292   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P7_U1_BASE), BS_UDB_0_5_1_CONFIG_VAL, 128u},
 293   2                      };
 294   2      
 295   2                      uint8 CYDATA i;
 296   2      
 297   2                      /* Zero out critical memory blocks before beginning configuration */
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/12/2014 11:42:03 PAGE 6   

 298   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 299   2                      {
 300   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 301   3                              CYMEMZERO(ms->address, ms->size);
 302   3                      }
 303   2      
 304   2                      /* Copy device configuration data into registers */
 305   2                      for (i = 0u; i < (sizeof(cfg_memcpy_list)/sizeof(cfg_memcpy_list[0])); i++)
 306   2                      {
 307   3                              const cfg_memcpy_t CYCODE * CYDATA mc = &cfg_memcpy_list[i];
 308   3                              void * CYDATA destPtr = mc->dest;
 309   3                              const void * CYDATA srcPtr = mc->src;
 310   3                              uint16 CYDATA numBytes = mc->size;
 311   3                              CYCONFIGCPY(destPtr, srcPtr, numBytes);
 312   3                      }
 313   2      
 314   2                      cfg_write_bytes(cfg_byte_table);
 315   2      
 316   2                      /* Perform normal device configuration. Order is not critical for these items. */
 317   2                      CYMEMZERO((void CYFAR *)(CYREG_PHUB_CFGMEM0_CFG0), 4u);
 318   2                      CYMEMZERO((void CYFAR *)(CYREG_PHUB_CFGMEM1_CFG0), 4u);
 319   2      
 320   2                      /* Enable digital routing */
 321   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 322   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 323   2      
 324   2                      /* Enable UDB array */
 325   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 326   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 327   2              }
 328   1      
 329   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 330   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT2_DR), (const void CYFAR *)(BS_IOPINS0_2_VAL), 10u);
 331   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT4_DM0), (const void CYFAR *)(BS_IOPINS0_4_VAL), 8u);
 332   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT6_DM0), (const void CYFAR *)(BS_IOPINS0_6_VAL), 8u);
 333   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 334   1      
 335   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 336   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 337   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 338   1              {
 339   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 340   2              }
 341   1      
 342   1      
 343   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 344   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 345   1              /* Setup clocks based on selections from Clock DWR */
 346   1              ClockSetup();
 347   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 348   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xB1u : 0x80u));
 349   1      
 350   1              /* Perform basic analog initialization to defaults */
 351   1              AnalogSetDefault();
 352   1      
 353   1              /* Configure alternate active mode */
 354   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 355   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/12/2014 11:42:03 PAGE 7   

             -~0x02u);        /* Disable CPU */
 356   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/12/2014 11:42:03 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 71
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 74
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 86
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 121
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 128
0000 7B00              MOV     R3,#00H
0002 7A40              MOV     R2,#040H
0004 7980              MOV     R1,#080H
0006 7D17              MOV     R5,#017H
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 129
000D 904082            MOV     DPTR,#04082H
0010 7418              MOV     A,#018H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 130
0013 7B00              MOV     R3,#00H
0015 7A40              MOV     R2,#040H
0017 7984              MOV     R1,#084H
0019 7D17              MOV     R5,#017H
001B 7C00              MOV     R4,#00H
001D 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 131
0020 904086            MOV     DPTR,#04086H
0023 7418              MOV     A,#018H
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 132
0026 7B00              MOV     R3,#00H
0028 7A40              MOV     R2,#040H
002A 7988              MOV     R1,#088H
002C 7D19              MOV     R5,#019H
002E 7C00              MOV     R4,#00H
0030 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 133
0033 90408A            MOV     DPTR,#0408AH
0036 7418              MOV     A,#018H
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 134
0039 7B00              MOV     R3,#00H
003B 7A40              MOV     R2,#040H
003D 798C              MOV     R1,#08CH
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/12/2014 11:42:03 PAGE 9   

003F 7D1D              MOV     R5,#01DH
0041 7C00              MOV     R4,#00H
0043 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 135
0046 90408E            MOV     DPTR,#0408EH
0049 7419              MOV     A,#019H
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 136
004C 7B00              MOV     R3,#00H
004E 7A40              MOV     R2,#040H
0050 7990              MOV     R1,#090H
0052 7D2F              MOV     R5,#02FH
0054 7C75              MOV     R4,#075H
0056 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 137
0059 904092            MOV     DPTR,#04092H
005C 7419              MOV     A,#019H
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 140
005F 904300            MOV     DPTR,#04300H
0062 7402              MOV     A,#02H
0064 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 141
0065 904000            MOV     DPTR,#04000H
0068 7408              MOV     A,#08H
006A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 144
006B 904200            MOV     DPTR,#04200H
006E 7403              MOV     A,#03H
0070 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 145
0071 7B0C              MOV     R3,#0CH
0073 7A01              MOV     R2,#01H
0075 7908              MOV     R1,#08H
0077 120000      E     LCALL   _cyread8
007A 9046A1            MOV     DPTR,#046A1H
007D EF                MOV     A,R7
007E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 148
007F 7B00              MOV     R3,#00H
0081 7A42              MOV     R2,#042H
0083 7922              MOV     R1,#022H
0085 7D08              MOV     R5,#08H
0087 7C00              MOV     R4,#00H
0089 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 149
008C 7B00              MOV     R3,#00H
008E 7A42              MOV     R2,#042H
0090 7920              MOV     R1,#020H
0092 7D51              MOV     R5,#051H
0094 7C12              MOV     R4,#012H
0096 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 151
0099 900000      R     MOV     DPTR,#pllLock
009C E4                CLR     A
009D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 152
009E 7F19              MOV     R7,#019H
00A0 7E00              MOV     R6,#00H
00A2 7D00              MOV     R5,#00H
00A4 7C00              MOV     R4,#00H
00A6 900000      R     MOV     DPTR,#timeout
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/12/2014 11:42:03 PAGE 10  

00A9 120000      E     LCALL   ?C?LSTXDATA
00AC         ?C0004:
00AC 900000      R     MOV     DPTR,#timeout
00AF 120000      E     LCALL   ?C?LLDXDATA
00B2 D3                SETB    C
00B3 EF                MOV     A,R7
00B4 9400              SUBB    A,#00H
00B6 EE                MOV     A,R6
00B7 9400              SUBB    A,#00H
00B9 404E              JC      ?C0005
00BB 900000      R     MOV     DPTR,#pllLock
00BE E0                MOVX    A,@DPTR
00BF FF                MOV     R7,A
00C0 EF                MOV     A,R7
00C1 6403              XRL     A,#03H
00C3 6044              JZ      ?C0005
                                           ; SOURCE LINE # 153
                                           ; SOURCE LINE # 154
00C5 904225            MOV     DPTR,#04225H
00C8 E0                MOVX    A,@DPTR
00C9 FF                MOV     R7,A
00CA EF                MOV     A,R7
00CB 5401              ANL     A,#01H
00CD FF                MOV     R7,A
00CE 7E00              MOV     R6,#00H
00D0 900000      R     MOV     DPTR,#pllLock
00D3 E0                MOVX    A,@DPTR
00D4 FE                MOV     R6,A
00D5 EE                MOV     A,R6
00D6 25E0              ADD     A,ACC
00D8 FE                MOV     R6,A
00D9 EE                MOV     A,R6
00DA 4F                ORL     A,R7
00DB FF                MOV     R7,A
00DC EF                MOV     A,R7
00DD 5403              ANL     A,#03H
00DF FF                MOV     R7,A
00E0 900000      R     MOV     DPTR,#pllLock
00E3 EF                MOV     A,R7
00E4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 155
00E5 7FE0              MOV     R7,#0E0H
00E7 7E01              MOV     R6,#01H
00E9 7D00              MOV     R5,#00H
00EB 7C00              MOV     R4,#00H
00ED 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 156
00F0 900000      R     MOV     DPTR,#timeout
00F3 120000      E     LCALL   ?C?LLDXDATA
00F6 7BFF              MOV     R3,#0FFH
00F8 7AFF              MOV     R2,#0FFH
00FA 79FF              MOV     R1,#0FFH
00FC 78FF              MOV     R0,#0FFH
00FE 120000      E     LCALL   ?C?LADD
0101 900000      R     MOV     DPTR,#timeout
0104 120000      E     LCALL   ?C?LSTXDATA
0107 80A3              SJMP    ?C0004
0109         ?C0005:
                                           ; SOURCE LINE # 158
0109 900000      R     MOV     DPTR,#timeout
010C 120000      E     LCALL   ?C?LLDXDATA
010F EF                MOV     A,R7
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/12/2014 11:42:03 PAGE 11  

0110 4E                ORL     A,R6
0111 7005              JNZ     ?C0007
                                           ; SOURCE LINE # 159
                                           ; SOURCE LINE # 160
0113 7F03              MOV     R7,#03H
0115 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 161
0118         ?C0007:
                                           ; SOURCE LINE # 164
0118 7B00              MOV     R3,#00H
011A 7A40              MOV     R2,#040H
011C 7904              MOV     R1,#04H
011E 7D00              MOV     R5,#00H
0120 7C01              MOV     R4,#01H
0122 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 165
0125 904004            MOV     DPTR,#04004H
0128 7407              MOV     A,#07H
012A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 166
012B 904006            MOV     DPTR,#04006H
012E E4                CLR     A
012F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 167
0130 904008            MOV     DPTR,#04008H
0133 7448              MOV     A,#048H
0135 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 168
0136 904004            MOV     DPTR,#04004H
0139 E4                CLR     A
013A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 169
013B 904001            MOV     DPTR,#04001H
013E 7402              MOV     A,#02H
0140 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 171
0141 9043A2            MOV     DPTR,#043A2H
0144 E0                MOVX    A,@DPTR
0145 FF                MOV     R7,A
0146 EF                MOV     A,R7
0147 441F              ORL     A,#01FH
0149 FF                MOV     R7,A
014A 9043A2            MOV     DPTR,#043A2H
014D EF                MOV     A,R7
014E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 172
014F 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 194
                                           ; SOURCE LINE # 195
                                           ; SOURCE LINE # 196
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 197
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/12/2014 11:42:03 PAGE 12  

0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 198
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 199
002F 90516C            MOV     DPTR,#0516CH
0032 7440              MOV     A,#040H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 200
0035 905A83            MOV     DPTR,#05A83H
0038 7401              MOV     A,#01H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 201
003B 905876            MOV     DPTR,#05876H
003E 7444              MOV     A,#044H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 202
0041 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 222
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 223
                                           ; SOURCE LINE # 224
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 225
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0010
                                           ; SOURCE LINE # 226
                                           ; SOURCE LINE # 227
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/12/2014 11:42:03 PAGE 13  

001C EF                MOV     A,R7
001D 4400              ORL     A,#00H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 228
0025 800E              SJMP    ?C0011
0027         ?C0010:
                                           ; SOURCE LINE # 230
                                           ; SOURCE LINE # 231
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54FF              ANL     A,#0FFH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 232
0035         ?C0011:
                                           ; SOURCE LINE # 233
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 234
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 256
                                           ; SOURCE LINE # 257
                                           ; SOURCE LINE # 259
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 261
                                           ; SOURCE LINE # 298
0016 750000      R     MOV     i,#00H
0019         ?C0013:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 940B              SUBB    A,#0BH
001E 503A              JNC     ?C0014
                                           ; SOURCE LINE # 299
                                           ; SOURCE LINE # 300
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/12/2014 11:42:03 PAGE 14  

0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 301
0038 AE00        R     MOV     R6,ms
003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 302
0056 0500        R     INC     i
0058 80BF              SJMP    ?C0013
005A         ?C0014:
                                           ; SOURCE LINE # 305
005A 750000      R     MOV     i,#00H
005D         ?C0016:
005D E500        R     MOV     A,i
005F C3                CLR     C
0060 9401              SUBB    A,#01H
0062 5078              JNC     ?C0017
                                           ; SOURCE LINE # 306
                                           ; SOURCE LINE # 307
0064 AF00        R     MOV     R7,i
0066 EF                MOV     A,R7
0067 75F008            MOV     B,#08H
006A A4                MUL     AB
006B 2400        R     ADD     A,#LOW cfg_memcpy_list
006D F582              MOV     DPL,A
006F E4                CLR     A
0070 3400        R     ADDC    A,#HIGH cfg_memcpy_list
0072 F583              MOV     DPH,A
0074 AF82              MOV     R7,DPL
0076 AE83              MOV     R6,DPH
0078 8E00        R     MOV     mc,R6
007A 8F00        R     MOV     mc+01H,R7
                                           ; SOURCE LINE # 308
007C AE00        R     MOV     R6,mc
007E AF00        R     MOV     R7,mc+01H
0080 8F82              MOV     DPL,R7
0082 8E83              MOV     DPH,R6
0084 120000      E     LCALL   ?C?PLDCODE
0087 8B00        R     MOV     destPtr,R3
0089 8A00        R     MOV     destPtr+01H,R2
008B 8900        R     MOV     destPtr+02H,R1
                                           ; SOURCE LINE # 309
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/12/2014 11:42:03 PAGE 15  

008D AE00        R     MOV     R6,mc
008F AF00        R     MOV     R7,mc+01H
0091 8F82              MOV     DPL,R7
0093 8E83              MOV     DPH,R6
0095 A3                INC     DPTR
0096 A3                INC     DPTR
0097 A3                INC     DPTR
0098 120000      E     LCALL   ?C?PLDCODE
009B 8B00        R     MOV     srcPtr,R3
009D 8A00        R     MOV     srcPtr+01H,R2
009F 8900        R     MOV     srcPtr+02H,R1
                                           ; SOURCE LINE # 310
00A1 AE00        R     MOV     R6,mc
00A3 AF00        R     MOV     R7,mc+01H
00A5 8F82              MOV     DPL,R7
00A7 8E83              MOV     DPH,R6
00A9 7406              MOV     A,#06H
00AB 93                MOVC    A,@A+DPTR
00AC F500        R     MOV     numBytes,A
00AE 7407              MOV     A,#07H
00B0 93                MOVC    A,@A+DPTR
00B1 F500        R     MOV     numBytes+01H,A
                                           ; SOURCE LINE # 311
00B3 AB00        R     MOV     R3,srcPtr
00B5 AA00        R     MOV     R2,srcPtr+01H
00B7 A900        R     MOV     R1,srcPtr+02H
00B9 C003              PUSH    AR3
00BB C002              PUSH    AR2
00BD C001              PUSH    AR1
00BF AB00        R     MOV     R3,destPtr
00C1 AA00        R     MOV     R2,destPtr+01H
00C3 A900        R     MOV     R1,destPtr+02H
00C5 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00C8 120000      E     LCALL   ?C?PSTXDATA
00CB D001              POP     AR1
00CD D002              POP     AR2
00CF D003              POP     AR3
00D1 AF00        R     MOV     R7,numBytes+01H
00D3 AE00        R     MOV     R6,numBytes
00D5 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 312
00D8 0500        R     INC     i
00DA 8081              SJMP    ?C0016
00DC         ?C0017:
                                           ; SOURCE LINE # 314
00DC 7B08              MOV     R3,#08H
00DE 7A00              MOV     R2,#00H
00E0 7900              MOV     R1,#00H
00E2 120000      E     LCALL   _cfg_write_bytes
                                           ; SOURCE LINE # 317
00E5 7B00              MOV     R3,#00H
00E7 7A76              MOV     R2,#076H
00E9 7900              MOV     R1,#00H
00EB 7D04              MOV     R5,#04H
00ED 7C00              MOV     R4,#00H
00EF 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 318
00F2 7B00              MOV     R3,#00H
00F4 7A76              MOV     R2,#076H
00F6 7908              MOV     R1,#08H
00F8 7D04              MOV     R5,#04H
00FA 7C00              MOV     R4,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/12/2014 11:42:03 PAGE 16  

00FC 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 321
00FF 7B01              MOV     R3,#01H
0101 7A50              MOV     R2,#050H
0103 7903              MOV     R1,#03H
0105 120000      E     LCALL   _cyread8
0108 EF                MOV     A,R7
0109 4402              ORL     A,#02H
010B FD                MOV     R5,A
010C 7B01              MOV     R3,#01H
010E 7A50              MOV     R2,#050H
0110 7903              MOV     R1,#03H
0112 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 322
0115 7B01              MOV     R3,#01H
0117 7A50              MOV     R2,#050H
0119 7913              MOV     R1,#013H
011B 120000      E     LCALL   _cyread8
011E EF                MOV     A,R7
011F 4402              ORL     A,#02H
0121 FD                MOV     R5,A
0122 7B01              MOV     R3,#01H
0124 7A50              MOV     R2,#050H
0126 7913              MOV     R1,#013H
0128 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 325
012B 9043A0            MOV     DPTR,#043A0H
012E E0                MOVX    A,@DPTR
012F FF                MOV     R7,A
0130 EF                MOV     A,R7
0131 4440              ORL     A,#040H
0133 FF                MOV     R7,A
0134 9043A0            MOV     DPTR,#043A0H
0137 EF                MOV     A,R7
0138 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 326
0139 9043C2            MOV     DPTR,#043C2H
013C E0                MOVX    A,@DPTR
013D FF                MOV     R7,A
013E EF                MOV     A,R7
013F 4410              ORL     A,#010H
0141 FF                MOV     R7,A
0142 9043C2            MOV     DPTR,#043C2H
0145 EF                MOV     A,R7
0146 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 327
                                           ; SOURCE LINE # 330
0147 7B08              MOV     R3,#08H
0149 7A05              MOV     R2,#05H
014B 79C0              MOV     R1,#0C0H
014D C003              PUSH    AR3
014F C002              PUSH    AR2
0151 C001              PUSH    AR1
0153 7B00              MOV     R3,#00H
0155 7A51              MOV     R2,#051H
0157 7920              MOV     R1,#020H
0159 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
015C 120000      E     LCALL   ?C?PSTXDATA
015F D001              POP     AR1
0161 D002              POP     AR2
0163 D003              POP     AR3
0165 7F0A              MOV     R7,#0AH
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/12/2014 11:42:03 PAGE 17  

0167 7E00              MOV     R6,#00H
0169 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 331
016C 7B08              MOV     R3,#08H
016E 7A05              MOV     R2,#05H
0170 79CC              MOV     R1,#0CCH
0172 C003              PUSH    AR3
0174 C002              PUSH    AR2
0176 C001              PUSH    AR1
0178 7B00              MOV     R3,#00H
017A 7A51              MOV     R2,#051H
017C 7942              MOV     R1,#042H
017E 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0181 120000      E     LCALL   ?C?PSTXDATA
0184 D001              POP     AR1
0186 D002              POP     AR2
0188 D003              POP     AR3
018A 7F08              MOV     R7,#08H
018C 7E00              MOV     R6,#00H
018E 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 332
0191 7B08              MOV     R3,#08H
0193 7A05              MOV     R2,#05H
0195 79D4              MOV     R1,#0D4H
0197 C003              PUSH    AR3
0199 C002              PUSH    AR2
019B C001              PUSH    AR1
019D 7B00              MOV     R3,#00H
019F 7A51              MOV     R2,#051H
01A1 7962              MOV     R1,#062H
01A3 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
01A6 120000      E     LCALL   ?C?PSTXDATA
01A9 D001              POP     AR1
01AB D002              POP     AR2
01AD D003              POP     AR3
01AF 7F08              MOV     R7,#08H
01B1 7E00              MOV     R6,#00H
01B3 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 333
01B6 9044F4            MOV     DPTR,#044F4H
01B9 7401              MOV     A,#01H
01BB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 336
01BC 904322            MOV     DPTR,#04322H
01BF E0                MOVX    A,@DPTR
01C0 FF                MOV     R7,A
01C1 EF                MOV     A,R7
01C2 4408              ORL     A,#08H
01C4 FF                MOV     R7,A
01C5 904322            MOV     DPTR,#04322H
01C8 EF                MOV     A,R7
01C9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 337
01CA 9046EC            MOV     DPTR,#046ECH
01CD E0                MOVX    A,@DPTR
01CE FF                MOV     R7,A
01CF EF                MOV     A,R7
01D0 C3                CLR     C
01D1 9405              SUBB    A,#05H
01D3 5006              JNC     ?C0019
                                           ; SOURCE LINE # 338
                                           ; SOURCE LINE # 339
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/12/2014 11:42:03 PAGE 18  

01D5 904689            MOV     DPTR,#04689H
01D8 743A              MOV     A,#03AH
01DA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 340
01DB         ?C0019:
                                           ; SOURCE LINE # 344
01DB 904800            MOV     DPTR,#04800H
01DE 74F1              MOV     A,#0F1H
01E0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 346
01E1 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 348
01E4 904800            MOV     DPTR,#04800H
01E7 74B1              MOV     A,#0B1H
01E9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 351
01EA 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 354
01ED 7B00              MOV     R3,#00H
01EF 7A43              MOV     R2,#043H
01F1 79A0              MOV     R1,#0A0H
01F3 C003              PUSH    AR3
01F5 C002              PUSH    AR2
01F7 C001              PUSH    AR1
01F9 7B00              MOV     R3,#00H
01FB 7A43              MOV     R2,#043H
01FD 79B0              MOV     R1,#0B0H
01FF 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0202 120000      E     LCALL   ?C?PSTXDATA
0205 D001              POP     AR1
0207 D002              POP     AR2
0209 D003              POP     AR3
020B 7F0E              MOV     R7,#0EH
020D 7E00              MOV     R6,#00H
020F 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 355
0212 9043B0            MOV     DPTR,#043B0H
0215 E0                MOVX    A,@DPTR
0216 FF                MOV     R7,A
0217 EF                MOV     A,R7
0218 54FD              ANL     A,#0FDH
021A FF                MOV     R7,A
021B EF                MOV     A,R7
021C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 356
021D 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1026    ----
   CONSTANT SIZE    =     63    ----
   XDATA SIZE       =   ----       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/12/2014 11:42:03 PAGE 19  

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
